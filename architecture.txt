==========
Fri Jul 07 23:50:02 -0700 2017

What doees the overall system architecture look like?

client: either web-based (store data remotely; privately for a fee, otherwise free)
or local thin python client-- preferred-- open source, free, lca-tools-derived
pay by query
you can also download and maintain (but not publish?) your own LCIA implementation? sure, you can publish it. but only I can make money off it? what I make money off of is private storage, improved interactive environment-- cross-db search--

it's a limited number of queries by a single user for free.  providing free data is free.  and you are free to republish.

the revenue model is: private storage, online *sharing* privately (but not secretly) with clients, or publishing and getting paid to access


that is far down the line though

first the revenue model is that you allow ppl to do LCA really easily just by going to my website

what do I sell?

indexing and archiving.  the first clients will be the data providers themselves.
PE can't even be bothered to keep past datasets. (or to keep them available?)

I don't want to be an IT services company. I don't want to host their data.

sell the tool, don't give away the tool for free.

the onlything that could prevent getting scooped is the network.  I would have to have all the reference data and keep it indexed. I would need a really good librarian.

is that it? I mean, the big vision was the social network of models.  there I would just have to have all the *current* data to get it started. USLCI, ELCD; ReCiPe

I would need to invite the LCIA practitioners to review and validate my implementation
I would charge people a subscription fee to query the data in the context of inventory + other impact implementations.

who would support it? PlasticsEurope and Ecoinvent
what exactly is the proposal? to get all their data and clean it up for them.  and work with them on facilitating + performing updates. and updates would be automatically synced to ecoinvent updates.  AND we'd throw in a slick UI to look at LCIA results


the data-cleaning would be $10-15k by all rights- well, let's look at it but let's say $7.5-10k
then the ecoinvent interfacing would be done with fragments? 1-hr per data set figure
and what would I give ecoinvent? have to be an ecospold file.  cmutel surely has an ecospold-writer.

right.  so I build fragments, extract their inventories, and write to ecospold. $7.5k

then for LCIA we would need some javascript vis.  just repurpose the waterfall charts and bar charts from calrecycle. and sankey. so they wouldn't have to be designers- just adapters.

could even make fragments out of the whole model.  just do it by declaration

yes, so that is another $15k at least.

and that-- part of that comes first from ecoinvent.  so for that I need to show Gregor something that knocks his socks off. just DO IT for ecoinvent. NOW!

need:
 * deployment person
 * d3/js + light html interfacing for dataviz

(* query interface / build fragments) as separate gig
 - for that we need more js

  rest query builder [semantic-ref]/{antelope items}
       	     	     [semantic-ref]/(index queries) -- terminate--
                     [semantic-ref]/[external-id]/(fg-bg-queries)
		     [semantic-ref]/(quantity queries)

	.. returns entities to be added to models. flows, processes; and json results that get plotted down below

  fragment flow editor
							  [  ] balance?
    [parent reference]  <-> dirn {flow name/flowable} - exch val(s...) -- {terminations...}
    	    		    	 reference qty (cfs...)
    	    		    	 [compartment]
				 properties...

	.. writes to fragment json



  fragment viewer== calrecycle tool OR tree a la py-TeX
   and LCIA and comparison and go from there

and people will pay to use that? no they will pay for the query completion.  "if you don't have to ask me, you don't have to pay me."

and I think there's revenue in that?
argument: that people will pay $10-50 to use a tool that provides them with that access.

and private hosting (because atm you have to *run python* to run it.)

that's the out- you can always install python and host your own server. fine, do it. but you can't use subscription data to run another subscription service.  

and what prevents you from just downloading it all and republishing it? licensing.


